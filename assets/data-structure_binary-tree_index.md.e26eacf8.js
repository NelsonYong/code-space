import{_ as t,c as a,o as e,R as r}from"./chunks/framework.d3b45b72.js";const u=JSON.parse('{"title":"二叉树-概览","description":"","frontmatter":{},"headers":[],"relativePath":"data-structure/binary-tree/index.md","filePath":"data-structure/binary-tree/index.md"}'),o={name:"data-structure/binary-tree/index.md"},c=r('<h1 id="二叉树-概览" tabindex="-1">二叉树-概览 <a class="header-anchor" href="#二叉树-概览" aria-label="Permalink to &quot;二叉树-概览&quot;">​</a></h1><p>树是用来模拟具有树状结构性质的数据集合。根据它的特性可以分为非常多的种类，对于我们来讲，掌握二叉树这种结构就足够了，它也是树最简单、应用最广泛的种类。</p><blockquote><p>二叉树是一种典型的树树状结构。如它名字所描述的那样，二叉树是每个节点最多有两个子树的树结构，通常子树被称作“左子树”和“右子树”。</p></blockquote><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/8/20/16cac3541c238d9b~tplv-t2oaga2asx-zoom-in-crop-mark:1304:0:0:0.awebp" alt="alt"></p><h2 id="二叉树实战列表" tabindex="-1">二叉树实战列表 <a class="header-anchor" href="#二叉树实战列表" aria-label="Permalink to &quot;二叉树实战列表&quot;">​</a></h2><ul><li><a href="http://www.conardli.top/docs/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86.html" target="_blank" rel="noreferrer">二叉树的中序遍历</a></li><li><a href="http://www.conardli.top/docs/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%89%8D%E5%BA%8F%E9%81%8D%E5%8E%86.html" target="_blank" rel="noreferrer">二叉树的前序遍历</a></li><li><a href="http://www.conardli.top/docs/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86.html" target="_blank" rel="noreferrer">二叉树的后序遍历</a></li></ul>',6),l=[c];function n(i,s,E,d,_,p){return e(),a("div",null,l)}const A=t(o,[["render",n]]);export{u as __pageData,A as default};
